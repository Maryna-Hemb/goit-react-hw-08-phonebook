{"version":3,"file":"static/js/983.4fd4fe29.chunk.js","mappings":"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","sources":["pages/HomePage.jsx","../node_modules/@mui/material/CssBaseline/CssBaseline.js","../node_modules/@mui/styled-engine/GlobalStyles/GlobalStyles.js","../node_modules/@mui/system/esm/GlobalStyles/GlobalStyles.js","../node_modules/@mui/material/GlobalStyles/GlobalStyles.js"],"sourcesContent":["import * as React from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getIsLoggedIn, getUserName } from '../redux/selectors';\n\nexport default function Home() {\n  const navigate = useNavigate();\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  const userName = useSelector(getUserName);\n  const onSignUp = () => {\n    navigate('/register');\n  };\n  const onLogIn = () => {\n    navigate('/login');\n  };\n  const onContacts = () => {\n    navigate('/contacts');\n  };\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container\n        maxWidth=\"xl\"\n        sx={{ bgcolor: '#cfe8fc', height: '100vh', position: 'relative' }}\n      >\n        <Box\n          sx={{\n            backgroundColor: 'primary.dark',\n            position: 'absolute',\n            top: '40%',\n            left: '50%',\n            transform: 'translate(-50%, -40%)',\n            padding: '3%',\n            borderRadius: 7,\n          }}\n        >\n          {isLoggedIn ? (\n            <>\n              <Typography\n                textAlign=\"center\"\n                sx={{ fontSize: 18, color: '#ffff' }}\n              >\n                Welcome {userName}\n              </Typography>\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  gap: '3%',\n                  marginTop: '10%',\n                }}\n              >\n                <Button\n                  variant=\"contained\"\n                  onClick={onContacts}\n                  sx={{ borderRadius: 3 }}\n                >\n                  Start working\n                </Button>\n              </Box>\n            </>\n          ) : (\n            <>\n              <Typography\n                textAlign=\"center\"\n                sx={{ fontSize: 18, color: '#ffff' }}\n              >\n                Welcome! Register or log in to continue...\n              </Typography>\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  gap: '3%',\n                  marginTop: '10%',\n                }}\n              >\n                <Button\n                  variant=\"contained\"\n                  onClick={onLogIn}\n                  sx={{ borderRadius: 3 }}\n                >\n                  Log In\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  onClick={onSignUp}\n                  sx={{ borderRadius: 3 }}\n                >\n                  Sign Up\n                </Button>\n              </Box>\n            </>\n          )}\n        </Box>\n      </Container>\n    </React.Fragment>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && !theme.vars && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components, _theme$components$Mui;\n  const colorSchemeStyles = {};\n  if (enableColorScheme && theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      var _scheme$palette;\n      colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n      };\n    });\n  }\n  let defaultStyles = _extends({\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  }, colorSchemeStyles);\n  const themeOverrides = (_theme$components = theme.components) == null ? void 0 : (_theme$components$Mui = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components$Mui.styleOverrides;\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n  return defaultStyles;\n};\n\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Global } from '@emotion/react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\n}\nexport default function GlobalStyles(props) {\n  const {\n    styles,\n    defaultTheme = {}\n  } = props;\n  const globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty(themeInput) ? defaultTheme : themeInput) : styles;\n  return /*#__PURE__*/_jsx(Global, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes = {\n  defaultTheme: PropTypes.object,\n  styles: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.object, PropTypes.func])\n} : void 0;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as MuiGlobalStyles } from '@mui/styled-engine';\nimport useTheme from '../useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GlobalStyles({\n  styles,\n  themeId,\n  defaultTheme = {}\n}) {\n  const upperTheme = useTheme(defaultTheme);\n  const globalStyles = typeof styles === 'function' ? styles(themeId ? upperTheme[themeId] || upperTheme : upperTheme) : styles;\n  return /*#__PURE__*/_jsx(MuiGlobalStyles, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  defaultTheme: PropTypes.object,\n  /**\n   * @ignore\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool]),\n  /**\n   * @ignore\n   */\n  themeId: PropTypes.string\n} : void 0;\nexport default GlobalStyles;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as SystemGlobalStyles } from '@mui/system';\nimport defaultTheme from '../styles/defaultTheme';\nimport THEME_ID from '../styles/identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GlobalStyles(props) {\n  return /*#__PURE__*/_jsx(SystemGlobalStyles, _extends({}, props, {\n    defaultTheme: defaultTheme,\n    themeId: THEME_ID\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The styles you want to apply globally.\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool])\n} : void 0;\nexport default GlobalStyles;"],"names":["Home","navigate","useNavigate","isLoggedIn","useSelector","getIsLoggedIn","userName","getUserName","maxWidth","sx","bgcolor","height","position","backgroundColor","top","left","transform","padding","borderRadius","textAlign","fontSize","color","display","justifyContent","gap","marginTop","variant","onClick","html","theme","enableColorScheme","_extends","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","WebkitTextSizeAdjust","vars","colorScheme","palette","mode","body","text","primary","typography","body1","background","default","common","white","inProps","props","useThemeProps","name","children","_jsxs","React","_jsx","GlobalStyles","styles","_theme$components","_theme$components$Mui","colorSchemeStyles","colorSchemes","Object","entries","forEach","_scheme$palette","key","scheme","getColorSchemeSelector","replace","defaultStyles","fontWeight","fontWeightBold","margin","themeOverrides","components","MuiCssBaseline","styleOverrides","defaultTheme","globalStyles","themeInput","undefined","obj","keys","length","Global","themeId","upperTheme","useTheme","MuiGlobalStyles","SystemGlobalStyles","THEME_ID"],"sourceRoot":""}