{"version":3,"file":"static/js/386.6d2a7d43.chunk.js","mappings":"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","sources":["components/registerForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport IconButton from '@mui/material/IconButton';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/authOperations';\nimport { useState } from 'react';\n\nexport const emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const nameRegexp = /^[A-Za-z ][A-Za-z0-9_]{2,20}$/; //name must contain 1-19 symbols (A-Z,a-z,0-9)\n\nexport const passwordRegexp = /^[A-Za-z][A-Za-z0-9_]{6,19}$/; //password must contain 1-19 symbols (A-Z,a-z,0-9)\n\nexport const RegisterForm = () => {\n  const [nameField, setName] = useState('');\n  const [emailField, setEmail] = useState('');\n  const [passwordField, setPassword] = useState('');\n  const [nameError, setNameError] = useState();\n  const [emailError, setEmailError] = useState();\n  const [passwordError, setPasswordError] = useState();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    name === 'name' && setName(value);\n    name === 'email' && setEmail(value);\n    name === 'password' && setPassword(value);\n    if (name === 'name') {\n      let regName = new RegExp(nameRegexp).test(value);\n      !regName && setNameError('name must contain 3-22 symbols (A-Z,a-z,0-9)');\n      regName && setNameError(null);\n    }\n    if (name === 'email') {\n      let regEmail = new RegExp(emailRegexp).test(value);\n      !regEmail && setEmailError('Invalid email format');\n      regEmail && setEmailError(null);\n    }\n    if (name === 'password') {\n      let regPassword = new RegExp(passwordRegexp).test(value);\n      !regPassword &&\n        setPasswordError('password must contain 3-22 symbols (A-Z,a-z,0-9)');\n      regPassword && setPasswordError(null);\n    }\n  };\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const { name, email, password } = event.currentTarget.elements;\n    console.log(name.value, email.value, password.value);\n\n    dispatch(\n      register({\n        name: name.value,\n        email: email.value,\n        password: password.value,\n      })\n    );\n    event.currentTarget.reset();\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Container\n      component=\"main\"\n      maxWidth=\"xl\"\n      sx={{\n        bgcolor: '#cfe8fc',\n        height: '100vh',\n        position: 'relative',\n        paddingTop: 7,\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          paddingTop: 7,\n          pl: '12%',\n          pr: '12%',\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        <Box\n          component=\"form\"\n          onSubmit={handleSubmit}\n          noValidate\n          sx={{\n            mt: 1,\n            display: 'grid',\n            flexDirection: 'column',\n            gap: 2,\n            width: '100%',\n          }}\n        >\n          <TextField\n            error={Boolean(nameError)}\n            helperText={nameError}\n            autoComplete=\"given-name\"\n            name=\"name\"\n            type=\"text\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Name\"\n            autoFocus\n            value={nameField}\n            onChange={handleChange}\n          />\n          <TextField\n            error={Boolean(emailError)}\n            helperText={emailError}\n            required\n            fullWidth\n            label=\"Email Address\"\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            autoComplete=\"email\"\n            onChange={handleChange}\n            value={emailField}\n          />\n          <Box\n            sx={{\n              position: 'relative',\n            }}\n          >\n            <TextField\n              error={Boolean(passwordError)}\n              helperText={passwordError}\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type={showPassword ? 'text' : 'password'}\n              id=\"password\"\n              autoComplete=\"new-password\"\n              onChange={handleChange}\n              value={passwordField}\n            />\n\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}\n              edge=\"end\"\n              sx={{\n                position: 'absolute',\n                top: 10,\n                right: 20,\n              }}\n            >\n              {showPassword ? <VisibilityOff /> : <Visibility />}\n            </IconButton>\n          </Box>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            disabled={Boolean(emailError)}\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign up\n          </Button>\n\n          <Link href=\"/goit-react-hw-08-phonebook/login\" variant=\"body2\">\n            {'Do you have an account? Log in'}\n          </Link>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n","import { RegisterForm } from '../components/registerForm/RegisterForm';\nconst Register = () => {\n  return <RegisterForm />;\n};\nexport default Register;\n"],"names":["emailRegexp","nameRegexp","passwordRegexp","RegisterForm","useState","nameField","setName","emailField","setEmail","passwordField","setPassword","nameError","setNameError","emailError","setEmailError","passwordError","setPasswordError","showPassword","setShowPassword","handleChange","e","currentTarget","name","value","regName","RegExp","test","regEmail","regPassword","dispatch","useDispatch","Container","component","maxWidth","sx","bgcolor","height","position","paddingTop","Box","display","flexDirection","alignItems","pl","pr","Typography","variant","onSubmit","event","preventDefault","elements","email","password","console","log","register","reset","noValidate","mt","gap","width","TextField","error","Boolean","helperText","autoComplete","type","required","fullWidth","id","label","autoFocus","onChange","IconButton","onClick","show","onMouseDown","edge","top","right","VisibilityOff","Visibility","Button","disabled","mb","Link","href"],"sourceRoot":""}