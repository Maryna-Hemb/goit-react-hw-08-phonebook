{"version":3,"file":"static/js/85.2c8f1337.chunk.js","mappings":"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","sources":["components/contactPageComp/contactForm/ContactForm.styled.jsx","components/contactPageComp/contactForm/ContactForm.jsx","components/contactPageComp/filter/Filter.styled.jsx","components/contactPageComp/filter/Filter.jsx","components/contactPageComp/contactListItem/ContactListItem.jsx","components/contactPageComp/contactList/ContactList.styled.jsx","components/contactPageComp/contactList/ContactList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field } from 'formik';\n\nconst Input = styled(Field)`\n  border-radius: 10px;\n  box-shadow: rgba(0, 0, 0, 0.6) 0px 5px 10px;\n  padding: 10px 15px;\n  width: 100%;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 30px;\n`;\n\nconst InputName = styled.p`\n  margin: 0 0 8px;\n`;\n\nconst Button = styled.button`\n  display: block;\n  padding: 12px 25px;\n  margin-right: auto;\n  margin-left: auto;\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.6) 0px 5px 10px;\n  &:hover,\n  &:focus {\n    background-color: #2641b5;\n    color: #fff;\n    box-shadow: rgba(0, 0, 0, 0.6) 0px 5px 10px;\n    scale: 1.1;\n  }\n`;\n\nexport { InputName, Button, Label, Input };\n","import { Formik, Form } from 'formik';\nimport { InputName, Button, Label, Input } from './ContactForm.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContactsItems } from '../../../redux/selectors';\nimport { addContact } from '../../../redux/contactsTask/operations';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const contact = useSelector(getContactsItems);\n\n  const hendleSubmit = (values, { resetForm }) => {\n    let nameRepeat = false;\n    contact.forEach(name => {\n      if (name.name.toLowerCase() === values.name.toLowerCase()) {\n        nameRepeat = true;\n        resetForm();\n        return alert(`${values.name} is already in contacts`);\n      }\n    });\n    if (nameRepeat) {\n      return;\n    }\n\n    dispatch(addContact({ ...values }));\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={hendleSubmit}>\n      <Form style={{ width: '100%', paddingLeft: '20%', paddingRight: '20%' }}>\n        <Label>\n          <InputName>Name</InputName>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n\n        <Label>\n          <InputName> Number</InputName>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit\">Add contacts</Button>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nconst Input = styled.input`\n  border-radius: 10px;\n  box-shadow: rgba(0, 0, 0, 0.6) 0px 5px 10px;\n  padding: 10px 15px;\n  width: 100%;\n`;\nexport { Input };\n","import { Input } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilterValue } from '../../../redux/selectors';\nimport { addFilter } from '../../../redux/contactsTask/filterSlice';\n\nexport const Filter = () => {\n  const state = useSelector(getFilterValue);\n  const dispatch = useDispatch(getFilterValue);\n\n  const onFilterChange = e => {\n    dispatch(addFilter(e.target.value.trim()));\n  };\n  return (\n    <label style={{ width: '100%', paddingLeft: '20%', paddingRight: '20%' }}>\n      <p>Find contacts by name</p>\n      <Input value={state} onChange={onFilterChange} type=\"text\"></Input>\n    </label>\n  );\n};\n","import PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from '../../../redux/contactsTask/operations';\n\nexport const ContactListItem = ({ id, number, name }) => {\n  const dispatch = useDispatch();\n\n  const onDeleteContact = () => dispatch(deleteContact(id));\n  return (\n    <>\n      {name}: {number}\n      <IconButton\n        aria-label=\"delete\"\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n        size=\"large\"\n      >\n        <DeleteIcon />\n      </IconButton>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  width: 100%;\n  padding-left: 20%;\n  padding-right: 20%;\n  display: flex;\n  flex-direction: column;\n  margin-top: 24px;\n  margin-bottom: 0px;\n`;\n\nconst ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &:not(:last-child) {\n    margin-bottom: 30px;\n  }\n`;\nexport { List, ListItem };\n","import { ContactListItem } from 'components/contactPageComp/contactListItem/ContactListItem';\nimport { List, ListItem } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { getContactsItems, getFilterValue } from '../../../redux/selectors';\n\nexport const ContactList = () => {\n  const contact = useSelector(getContactsItems);\n  const filter = useSelector(getFilterValue);\n  const filteredContacts = () => {\n    const normalizeFilter = filter.toLowerCase();\n    return contact.filter(({ name }) =>\n      name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  const contactForRender = filteredContacts();\n\n  return (\n    <>\n      <List>\n        {contactForRender.length !== 0 ? (\n          contactForRender.map(({ id, name, number }) => (\n            <ListItem key={id}>\n              <ContactListItem id={id} name={name} number={number} />\n            </ListItem>\n          ))\n        ) : (\n          <div style={{ fontSize: 22, color: 'grey', textAlign: 'center' }}>\n            No contacts\n          </div>\n        )}\n      </List>\n    </>\n  );\n};\n","import * as React from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport { ContactForm } from '../components/contactPageComp/contactForm/ContactForm';\nimport { Filter } from '../components/contactPageComp/filter/Filter';\nimport { ContactList } from '../components/contactPageComp/contactList/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getIsLoading, getError } from '../redux/selectors';\nimport { fetchContacts } from '../redux/contactsTask/operations';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container\n        maxWidth=\"xl\"\n        sx={{\n          bgcolor: '#cfe8fc',\n          height: '100vh',\n          position: 'relative',\n          paddingTop: 7,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <h1 style={{ fontSize: 36, marginTop: 0 }}>Phonebook</h1>\n        <ContactForm />\n        <h2 style={{ fontSize: 32, marginTop: 36, marginBottom: 0 }}>\n          Contacts\n        </h2>\n        <Filter />\n        <ContactList />\n        <div>{isLoading && !error && <b>Request in progress...</b>}</div>\n      </Container>\n    </React.Fragment>\n  );\n};\nexport default ContactsPage;\n"],"names":["Input","styled","Field","Label","InputName","Button","initialValues","name","number","ContactForm","dispatch","useDispatch","contact","useSelector","getContactsItems","onSubmit","values","resetForm","nameRepeat","forEach","toLowerCase","alert","addContact","style","width","paddingLeft","paddingRight","type","pattern","title","required","Filter","state","getFilterValue","value","onChange","e","addFilter","target","trim","ContactListItem","id","IconButton","onClick","deleteContact","size","Delete","List","ListItem","ContactList","filter","contactForRender","normalizeFilter","includes","filteredContacts","length","map","fontSize","color","textAlign","isLoading","getIsLoading","error","getError","useEffect","fetchContacts","CssBaseline","Container","maxWidth","sx","bgcolor","height","position","paddingTop","display","flexDirection","alignItems","marginTop","marginBottom"],"sourceRoot":""}